version: '3.4'

services:

    ### NGINX Backend Server
    backend-nginx:
        build:
            context: nginx
            args:
                - PHP_UPSTREAM_CONTAINER=backend-php-fpm
                - PHP_UPSTREAM_PORT=9000
        volumes:
            - ./nginx/sites/default.conf:/etc/nginx/conf.d/default.conf
            - ${APP_CODE_PATH_HOST}/cms:${APP_CODE_PATH_CONTAINER}
            - ./logs/nginx-backend/:/var/log/nginx
        ports:
            - "81:80"
        depends_on:
            - backend-php-fpm
        networks:
            - frontend
            - backend

    ### PHP-FPM-backend
    backend-php-fpm:
        build:
            context: php-fpm
            args:
                - XDEBUG_INI_FILENAME
        volumes:
            - ./php-fpm/php.ini:/usr/local/etc/php/php.ini
            - ${APP_CODE_PATH_HOST}/cms:${APP_CODE_PATH_CONTAINER}
        expose:
            - "9000"
        extra_hosts:
            - "dockerhost:${DOCKER_HOST_IP}"
        environment:
            - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
        depends_on:
            - mariadb
        networks:
            - backend

    ### Workspace Utilities
    workspace:
        build:
            context: workspace
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        extra_hosts:
            - "dockerhost:${DOCKER_HOST_IP}"
        tty: true
        networks:
            - backend

    ### MariaDB
    mariadb:
        build: mariadb
        volumes:
            - mariadb:/var/lib/mysql
            - ${MARIADB_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        ports:
            - "${MARIADB_PORT}:3306"
        environment:
            - MYSQL_DATABASE=${MARIADB_DATABASE}
            - MYSQL_USER=${MARIADB_USER}
            - MYSQL_PASSWORD=${MARIADB_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
        networks:
            - backend

networks:
    backend:
        driver: ${NETWORKS_DRIVER}
    frontend:
        driver: ${NETWORKS_DRIVER}

volumes:
    mariadb:
        driver: ${VOLUMES_DRIVER}
